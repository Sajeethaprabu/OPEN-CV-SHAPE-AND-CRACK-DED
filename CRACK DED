import cv2
import numpy as np

def detect_cracks(image_path):
    image = cv2.imread(image_path)
    if image is None:
        print("❌ Could not read image at path:", image_path)
        return

    # Convert to grayscale
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

    # Blur to reduce noise
    blurred = cv2.GaussianBlur(gray, (5, 5), 0)

    # Edge detection using Canny
    edges = cv2.Canny(blurred, 50, 150)

    # Find contours
    contours, _ = cv2.findContours(edges.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    # Draw only significant contours (cracks)
    for cnt in contours:
        if cv2.contourArea(cnt) > 50:  # filter small/noisy ones
            cv2.drawContours(image, [cnt], -1, (0, 255, 255), 2)  # Fluorescent yellow

    # Resize for smaller display window
    resized = cv2.resize(image, (600, 400))
    cv2.imshow(" Crack Traced", resized)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

# ---------- MAIN ----------
if __name__ == "__main__":
    image_path = input(" Enter the path to the cracked wall image: ").strip()
    detect_cracks(image_path)

